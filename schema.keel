model Todo {
    fields {
        complete Boolean @default(false)
        title Text
        description Text?
        completedAt Timestamp?
        owner Identity
        project Project?
    }

    operations {
        get todo(id)
        list allTodos(complete?, project.id?) {
            @where(todo.owner == ctx.identity)
        }
        delete deleteTodo(id)
        update updateTodo(id) with (title?, description?, project.id?)
        create createTodo() with (title, description?, project.id?) {
            @permission(expression: ctx.isAuthenticated)
            @set(todo.owner = ctx.identity)
        }
    }

    functions {
        update setCompletion(id) with (complete)
    }

    @permission(
        actions: [get, list, update, delete],
        expression: todo.owner == ctx.identity
    )
}

model Project {
    fields {
        title Text
        owner Identity
        tasks Todo[]
    }

    operations {
        get getProject(id)
        list listProjects() {
            @where(project.owner == ctx.identity)
        }
        delete deleteProject(id)
        create createProject() with (title) {
            @permission(expression: ctx.isAuthenticated)
            @set(project.owner = ctx.identity)
        }
        update updateProject(id) with (title)
    }

    @permission(
        actions: [get, list, update, delete],
        expression: project.owner == ctx.identity
    )
}

api Web {
    @graphql

    models {
        Todo
        Project
    }
}

api Console {
    @rpc

    models {
        Todo
        Project
    }
}

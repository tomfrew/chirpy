model Account {
    fields {
        identity Identity @unique
        name Text
        projects AccountProject[]
    }

    operations {
        create createAccount() with (name) {
            @permission(expression: ctx.isAuthenticated)
            @set(account.identity = ctx.identity)
        }
        get myAccount() {
            @where(account.identity == ctx.identity)
        }
    }

    @permission(
        actions: [get, update, delete],
        expression: ctx.identity == account.identity
    )
}

model AccountProject {
    fields {
        account Account
        project Project
    }

    // Ideally be created as created as part of project creation via a function
    operations {
        create createAccountProject() with (accountId, projectId) {
            @permission(expression: ctx.isAuthenticated)
        }
    }
}

model Project {
    fields {
        title Text
        accounts AccountProject[]
        //TODO: add allowed URLs list so that we only accept events sent from within that webpage
    }

    operations {
        get getProject(id)
        create createProject() with (title) {
            @permission(expression: ctx.isAuthenticated)
        }
        list listProjects() {
            @where(project.accounts.account.identity == ctx.identity)
        }
        delete deleteProject(id)
        update updateProject(id) with (title)
    }

    @permission(
        actions: [get, list, update, delete],
        expression: project.accounts.account.identity == ctx.identity
    )
}

enum Type {
    Pageview
    Event
}

model TrackingEvent {
    fields {
        name Text
        project Project
        metadata Text?
        // TODO: this should come from the browser. Search for other cool data to add
        userAgent Text?
        // TODO: add this to tracker so it can be provided
        userId Text?
        type Type?
    }

    functions {
        create createTrackingEvent() with (name, metadata, projectId, type) {
            @permission(expression: true)
        }
    }
}

api Tracker {
    @rpc

    models {
        TrackingEvent
    }
}

api Admin {
    @graphql

    models {
        Account
        AccountProject
        Project
        TrackingEvent
    }
}
